spring.application.name=projetos

# Configurações do servidor
server.port=8080

# Configurações do banco de dados
spring.datasource.url=jdbc:postgresql://aulasprog.us.to:5432/projetos_sesi_pietro
spring.datasource.username=postgres
spring.datasource.password=senaipatobranco

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Configurações de JPA e Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

jwt.public.key=classpath:public_key.pem
jwt.private.key=classpath:private_key.pem

spring.web.cors.allowed-origins=http://localhost:4200
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

<<<<<<< HEAD
=======
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true


>>>>>>> 0d9835c (Melhora o sistema de tokens, adicionando validaÃ§Ã£o com dois tokens. ToDo: Limite de descriÃ§Ã£o, mais testes de token: criar uma funÃ§Ã£o que chama o /auth/refresh e testar se os tokens sÃ£o refeitos automaticamente sem a necessidade de logar novamente, testar coisas de autorizaÃ§Ã£o e requisiÃ§Ãµes com tokens)
